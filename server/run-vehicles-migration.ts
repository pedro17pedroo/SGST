import { db } from './database/db';
import fs from 'fs';

async function runMigration() {
  try {
    console.log('üîÑ Iniciando migra√ß√£o da tabela vehicles...');
    
    // Verificar se h√° dados na tabela
    const countResult = await db.execute('SELECT COUNT(*) as total FROM vehicles');
    console.log('üìä Total de ve√≠culos:', (countResult[0] as any)[0].total);
    
    // Verificar se a coluna vehicle_type_id j√° existe
    const columnsResult = await db.execute('DESCRIBE vehicles');
    const columns = columnsResult[0] as unknown as any[];
    const hasVehicleTypeId = columns.some(col => col.Field === 'vehicle_type_id');
    
    if (hasVehicleTypeId) {
      console.log('‚úÖ A coluna vehicle_type_id j√° existe!');
      return;
    }
    
    console.log('üîß Adicionando coluna vehicle_type_id...');
    await db.execute('ALTER TABLE vehicles ADD COLUMN vehicle_type_id VARCHAR(36) AFTER vin');
    
    console.log('üîß Criando tipo de ve√≠culo padr√£o...');
    await db.execute(`
      INSERT IGNORE INTO vehicle_types (id, name, description, category, is_active, created_at, updated_at)
      VALUES ('default-vehicle-type-id', 'Ve√≠culo Comercial', 'Tipo padr√£o para ve√≠culos comerciais', 'commercial', 1, NOW(), NOW())
    `);
    
    console.log('üîß Atualizando registros existentes...');
    await db.execute('UPDATE vehicles SET vehicle_type_id = "default-vehicle-type-id" WHERE vehicle_type_id IS NULL');
    
    console.log('üîß Tornando coluna obrigat√≥ria...');
    await db.execute('ALTER TABLE vehicles MODIFY COLUMN vehicle_type_id VARCHAR(36) NOT NULL');
    
    console.log('üîß Adicionando chave estrangeira...');
    try {
      await db.execute(`
        ALTER TABLE vehicles ADD CONSTRAINT fk_vehicles_vehicle_type 
        FOREIGN KEY (vehicle_type_id) REFERENCES vehicle_types(id)
      `);
    } catch (e) {
      console.log('‚ö†Ô∏è Chave estrangeira j√° existe ou erro:', (e as Error).message);
    }
    
    console.log('üîß Removendo coluna type antiga...');
    try {
      await db.execute('ALTER TABLE vehicles DROP COLUMN type');
    } catch (e) {
      console.log('‚ö†Ô∏è Coluna type j√° foi removida ou erro:', (e as Error).message);
    }
    
    console.log('‚úÖ Migra√ß√£o conclu√≠da com sucesso!');
    
    // Verificar estrutura final
    const [finalStructure] = await db.execute('DESCRIBE vehicles');
    console.log('üìã Estrutura final da tabela vehicles:');
    console.table(finalStructure);
    
  } catch (error) {
    console.error('‚ùå Erro na migra√ß√£o:', error);
    process.exit(1);
  }
}

runMigration();