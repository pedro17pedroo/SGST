#!/bin/bash

# Script de Diagn√≥stico Completo - Problema de Sess√£o em Produ√ß√£o
# Este script verifica o estado atual do servidor e identifica o que precisa ser corrigido

echo "üîç DIAGN√ìSTICO COMPLETO - PROBLEMA DE SESS√ÉO EM PRODU√á√ÉO"
echo "============================================================"
echo ""

# 1. Verificar vers√£o do Node.js
echo "üìã 1. VERS√ÉO DO NODE.JS:"
node --version
echo ""

# 2. Verificar se connect-session-sequelize est√° instalado e qual vers√£o
echo "üìã 2. CONNECT-SESSION-SEQUELIZE:"
if npm list connect-session-sequelize 2>/dev/null; then
    echo "‚úÖ connect-session-sequelize est√° instalado"
else
    echo "‚ùå connect-session-sequelize N√ÉO est√° instalado"
fi
echo ""

# 3. Verificar se o diret√≥rio src/config existe
echo "üìã 3. DIRET√ìRIO src/config:"
if [ -d "src/config" ]; then
    echo "‚úÖ Diret√≥rio src/config existe"
    if [ -f "src/config/session.ts" ]; then
        echo "‚úÖ Arquivo src/config/session.ts existe"
        echo "üìÑ Conte√∫do do session.ts:"
        head -10 src/config/session.ts
    else
        echo "‚ùå Arquivo src/config/session.ts N√ÉO existe"
    fi
else
    echo "‚ùå Diret√≥rio src/config N√ÉO existe"
fi
echo ""

# 4. Verificar o index.js atual
echo "üìã 4. ARQUIVO INDEX.JS ATUAL:"
if [ -f "index.js" ]; then
    echo "‚úÖ index.js existe"
    echo "üìÑ Primeiras linhas do index.js:"
    head -20 index.js
    echo ""
    echo "üîç Procurando por 'MemoryStore' no index.js:"
    if grep -n "MemoryStore" index.js; then
        echo "‚ùå PROBLEMA: MemoryStore ainda est√° sendo usado!"
    else
        echo "‚úÖ MemoryStore n√£o encontrado no index.js"
    fi
    echo ""
    echo "üîç Procurando por 'SequelizeStore' no index.js:"
    if grep -n "SequelizeStore" index.js; then
        echo "‚úÖ SequelizeStore encontrado no index.js"
    else
        echo "‚ùå PROBLEMA: SequelizeStore n√£o encontrado no index.js!"
    fi
else
    echo "‚ùå index.js N√ÉO existe"
fi
echo ""

# 5. Verificar status do PM2
echo "üìã 5. STATUS DO PM2:"
pm2 list
echo ""

# 6. Verificar logs recentes do PM2
echo "üìã 6. LOGS RECENTES DO PM2 (√∫ltimas 20 linhas):"
pm2 logs API-gstock --lines 20
echo ""

# 7. Verificar se h√° backup do index.js
echo "üìã 7. BACKUP DO INDEX.JS:"
if [ -f "index.js.backup" ]; then
    echo "‚úÖ Backup index.js.backup existe"
else
    echo "‚ùå Backup index.js.backup N√ÉO existe"
fi
echo ""

# 8. Verificar depend√™ncias no package.json
echo "üìã 8. DEPEND√äNCIAS RELACIONADAS √Ä SESS√ÉO:"
if [ -f "package.json" ]; then
    echo "üîç Procurando depend√™ncias de sess√£o no package.json:"
    grep -A 5 -B 5 "session" package.json || echo "Nenhuma depend√™ncia de sess√£o encontrada"
else
    echo "‚ùå package.json N√ÉO existe"
fi
echo ""

echo "üéØ RESUMO DO DIAGN√ìSTICO:"
echo "========================"
echo "1. Execute este script no servidor de produ√ß√£o"
echo "2. Analise cada se√ß√£o para identificar problemas"
echo "3. Os principais pontos a verificar s√£o:"
echo "   - Vers√£o do Node.js (deve ser >= 22 para connect-session-sequelize@8.x)"
echo "   - Presen√ßa do connect-session-sequelize instalado"
echo "   - Exist√™ncia dos arquivos src/config/session.ts"
echo "   - Se o index.js foi atualizado (n√£o deve ter MemoryStore)"
echo "   - Logs do PM2 para erros espec√≠ficos"
echo ""
echo "üí° Ap√≥s o diagn√≥stico, execute as corre√ß√µes necess√°rias!"